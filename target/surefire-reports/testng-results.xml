<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="10" passed="9" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-10-28T12:51:24 IST" name="Suite" finished-at="2023-10-28T12:52:18 IST" duration-ms="54269">
    <groups>
    </groups>
    <test started-at="2023-10-28T12:51:24 IST" name="Test" finished-at="2023-10-28T12:52:18 IST" duration-ms="54269">
      <class name="testCases.testCheckboxPage">
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:testCases.testCheckboxPage@3e8f7922]" started-at="2023-10-28T12:51:56 IST" name="setUp" finished-at="2023-10-28T12:51:58 IST" duration-ms="2167" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testCases.testCheckboxPage.DisableCheckBoxDemo()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="DisableCheckBoxDemo()[pri:0, instance:testCases.testCheckboxPage@3e8f7922]" started-at="2023-10-28T12:51:58 IST" name="DisableCheckBoxDemo" finished-at="2023-10-28T12:52:00 IST" duration-ms="2080" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DisableCheckBoxDemo -->
        <test-method is-config="true" signature="testStatus(org.testng.ITestResult)[pri:0, instance:testCases.testCheckboxPage@3e8f7922]" started-at="2023-10-28T12:52:00 IST" name="testStatus" finished-at="2023-10-28T12:52:00 IST" duration-ms="456" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=DisableCheckBoxDemo status=SUCCESS method=testCheckboxPage.DisableCheckBoxDemo()[pri:0, instance:testCases.testCheckboxPage@3e8f7922] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStatus -->
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:testCases.testCheckboxPage@3e8f7922]" started-at="2023-10-28T12:52:00 IST" name="setUp" finished-at="2023-10-28T12:52:03 IST" duration-ms="2467" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testCases.testCheckboxPage.MutlipleCheckBox()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="MutlipleCheckBox()[pri:0, instance:testCases.testCheckboxPage@3e8f7922]" started-at="2023-10-28T12:52:03 IST" name="MutlipleCheckBox" finished-at="2023-10-28T12:52:04 IST" duration-ms="1562" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MutlipleCheckBox -->
        <test-method is-config="true" signature="testStatus(org.testng.ITestResult)[pri:0, instance:testCases.testCheckboxPage@3e8f7922]" started-at="2023-10-28T12:52:04 IST" name="testStatus" finished-at="2023-10-28T12:52:05 IST" duration-ms="514" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=MutlipleCheckBox status=SUCCESS method=testCheckboxPage.MutlipleCheckBox()[pri:0, instance:testCases.testCheckboxPage@3e8f7922] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStatus -->
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:testCases.testCheckboxPage@3e8f7922]" started-at="2023-10-28T12:52:05 IST" name="setUp" finished-at="2023-10-28T12:52:07 IST" duration-ms="2305" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testCases.testCheckboxPage.SingleCheckBoxDemo()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="SingleCheckBoxDemo()[pri:0, instance:testCases.testCheckboxPage@3e8f7922]" started-at="2023-10-28T12:52:07 IST" name="SingleCheckBoxDemo" finished-at="2023-10-28T12:52:08 IST" duration-ms="1207" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SingleCheckBoxDemo -->
        <test-method is-config="true" signature="testStatus(org.testng.ITestResult)[pri:0, instance:testCases.testCheckboxPage@3e8f7922]" started-at="2023-10-28T12:52:08 IST" name="testStatus" finished-at="2023-10-28T12:52:09 IST" duration-ms="293" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SingleCheckBoxDemo status=SUCCESS method=testCheckboxPage.SingleCheckBoxDemo()[pri:0, instance:testCases.testCheckboxPage@3e8f7922] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStatus -->
      </class> <!-- testCases.testCheckboxPage -->
      <class name="testCases.testHandelWindowsPage">
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:testCases.testHandelWindowsPage@3f1c5af9]" started-at="2023-10-28T12:51:24 IST" name="setUp" finished-at="2023-10-28T12:51:31 IST" duration-ms="7043" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testCases.testHandelWindowsPage.handelTwitterPage() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="handelTwitterPage()[pri:0, instance:testCases.testHandelWindowsPage@3f1c5af9]" started-at="2023-10-28T12:51:31 IST" name="handelTwitterPage" finished-at="2023-10-28T12:51:33 IST" duration-ms="1732" status="FAIL">
          <exception class="org.openqa.selenium.WebDriverException">
            <message>
              <![CDATA[no such execution context
  (Session info: chrome=118.0.5993.117)
Build info: version: '4.11.0', revision: '040bc5406b'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [8c30db2430387cb2224aba5602f2374a, maximizeCurrentWindow {}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 118.0.5993.117, chrome: {chromedriverVersion: 118.0.5993.70 (e52f33f30b91..., userDataDir: C:\Users\Kumar\AppData\Loca...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:65192}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:65192/devtoo..., se:cdpVersion: 118.0.5993.117, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 8c30db2430387cb2224aba5602f2374a]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.WebDriverException: no such execution context
  (Session info: chrome=118.0.5993.117)
Build info: version: '4.11.0', revision: '040bc5406b'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [8c30db2430387cb2224aba5602f2374a, maximizeCurrentWindow {}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 118.0.5993.117, chrome: {chromedriverVersion: 118.0.5993.70 (e52f33f30b91..., userDataDir: C:\Users\Kumar\AppData\Loca...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:65192}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:65192/devtoo..., se:cdpVersion: 118.0.5993.117, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 8c30db2430387cb2224aba5602f2374a
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:52)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:191)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:196)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:171)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:518)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:591)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:595)
at org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:978)
at testCases.testHandelWindowsPage.handelTwitterPage(testHandelWindowsPage.java:42)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.WebDriverException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- handelTwitterPage -->
        <test-method is-config="true" signature="testStatus(org.testng.ITestResult)[pri:0, instance:testCases.testHandelWindowsPage@3f1c5af9]" started-at="2023-10-28T12:51:33 IST" name="testStatus" finished-at="2023-10-28T12:51:37 IST" duration-ms="4389" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=handelTwitterPage status=FAILURE method=testHandelWindowsPage.handelTwitterPage()[pri:0, instance:testCases.testHandelWindowsPage@3f1c5af9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStatus -->
      </class> <!-- testCases.testHandelWindowsPage -->
      <class name="testCases.testDropDownSearchDemoPage">
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:testCases.testDropDownSearchDemoPage@5ddabb18]" started-at="2023-10-28T12:51:41 IST" name="setUp" finished-at="2023-10-28T12:51:45 IST" duration-ms="3633" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testCases.testDropDownSearchDemoPage.SelectCountry()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="SelectCountry()[pri:0, instance:testCases.testDropDownSearchDemoPage@5ddabb18]" started-at="2023-10-28T12:51:45 IST" name="SelectCountry" finished-at="2023-10-28T12:51:47 IST" duration-ms="1780" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SelectCountry -->
        <test-method is-config="true" signature="testStatus(org.testng.ITestResult)[pri:0, instance:testCases.testDropDownSearchDemoPage@5ddabb18]" started-at="2023-10-28T12:51:47 IST" name="testStatus" finished-at="2023-10-28T12:51:47 IST" duration-ms="327" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SelectCountry status=SUCCESS method=testDropDownSearchDemoPage.SelectCountry()[pri:0, instance:testCases.testDropDownSearchDemoPage@5ddabb18] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStatus -->
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:testCases.testDropDownSearchDemoPage@5ddabb18]" started-at="2023-10-28T12:51:47 IST" name="setUp" finished-at="2023-10-28T12:51:49 IST" duration-ms="2400" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testCases.testDropDownSearchDemoPage.SelectFile()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="SelectFile()[pri:0, instance:testCases.testDropDownSearchDemoPage@5ddabb18]" started-at="2023-10-28T12:51:49 IST" name="SelectFile" finished-at="2023-10-28T12:51:51 IST" duration-ms="1262" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SelectFile -->
        <test-method is-config="true" signature="testStatus(org.testng.ITestResult)[pri:0, instance:testCases.testDropDownSearchDemoPage@5ddabb18]" started-at="2023-10-28T12:51:51 IST" name="testStatus" finished-at="2023-10-28T12:51:51 IST" duration-ms="534" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SelectFile status=SUCCESS method=testDropDownSearchDemoPage.SelectFile()[pri:0, instance:testCases.testDropDownSearchDemoPage@5ddabb18] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStatus -->
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:testCases.testDropDownSearchDemoPage@5ddabb18]" started-at="2023-10-28T12:51:51 IST" name="setUp" finished-at="2023-10-28T12:51:54 IST" duration-ms="2337" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testCases.testDropDownSearchDemoPage.SelectState()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="SelectState()[pri:0, instance:testCases.testDropDownSearchDemoPage@5ddabb18]" started-at="2023-10-28T12:51:54 IST" name="SelectState" finished-at="2023-10-28T12:51:55 IST" duration-ms="1683" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SelectState -->
        <test-method is-config="true" signature="testStatus(org.testng.ITestResult)[pri:0, instance:testCases.testDropDownSearchDemoPage@5ddabb18]" started-at="2023-10-28T12:51:55 IST" name="testStatus" finished-at="2023-10-28T12:51:56 IST" duration-ms="387" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SelectState status=SUCCESS method=testDropDownSearchDemoPage.SelectState()[pri:0, instance:testCases.testDropDownSearchDemoPage@5ddabb18] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStatus -->
      </class> <!-- testCases.testDropDownSearchDemoPage -->
      <class name="testCases.testDragAndDrop">
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:testCases.testDragAndDrop@63192798]" started-at="2023-10-28T12:52:09 IST" name="setUp" finished-at="2023-10-28T12:52:11 IST" duration-ms="2255" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testCases.testDragAndDrop.dragAndDropDemo1()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="dragAndDropDemo1()[pri:0, instance:testCases.testDragAndDrop@63192798]" started-at="2023-10-28T12:52:11 IST" name="dragAndDropDemo1" finished-at="2023-10-28T12:52:13 IST" duration-ms="2387" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dragAndDropDemo1 -->
        <test-method is-config="true" signature="testStatus(org.testng.ITestResult)[pri:0, instance:testCases.testDragAndDrop@63192798]" started-at="2023-10-28T12:52:13 IST" name="testStatus" finished-at="2023-10-28T12:52:14 IST" duration-ms="377" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=dragAndDropDemo1 status=SUCCESS method=testDragAndDrop.dragAndDropDemo1()[pri:0, instance:testCases.testDragAndDrop@63192798] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStatus -->
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:testCases.testDragAndDrop@63192798]" started-at="2023-10-28T12:52:14 IST" name="setUp" finished-at="2023-10-28T12:52:16 IST" duration-ms="2578" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testCases.testDragAndDrop.dragAndDropDemo2()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="dragAndDropDemo2()[pri:0, instance:testCases.testDragAndDrop@63192798]" started-at="2023-10-28T12:52:16 IST" name="dragAndDropDemo2" finished-at="2023-10-28T12:52:17 IST" duration-ms="1033" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dragAndDropDemo2 -->
        <test-method is-config="true" signature="testStatus(org.testng.ITestResult)[pri:0, instance:testCases.testDragAndDrop@63192798]" started-at="2023-10-28T12:52:17 IST" name="testStatus" finished-at="2023-10-28T12:52:18 IST" duration-ms="506" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=dragAndDropDemo2 status=SUCCESS method=testDragAndDrop.dragAndDropDemo2()[pri:0, instance:testCases.testDragAndDrop@63192798] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStatus -->
      </class> <!-- testCases.testDragAndDrop -->
      <class name="testCases.testSliderDemoPage">
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:testCases.testSliderDemoPage@1c55f277]" started-at="2023-10-28T12:51:37 IST" name="setUp" finished-at="2023-10-28T12:51:40 IST" duration-ms="2448" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testCases.testSliderDemoPage.testSlider()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testSlider()[pri:0, instance:testCases.testSliderDemoPage@1c55f277]" started-at="2023-10-28T12:51:40 IST" name="testSlider" finished-at="2023-10-28T12:51:41 IST" duration-ms="1197" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSlider -->
        <test-method is-config="true" signature="testStatus(org.testng.ITestResult)[pri:0, instance:testCases.testSliderDemoPage@1c55f277]" started-at="2023-10-28T12:51:41 IST" name="testStatus" finished-at="2023-10-28T12:51:41 IST" duration-ms="513" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testSlider status=SUCCESS method=testSliderDemoPage.testSlider()[pri:0, instance:testCases.testSliderDemoPage@1c55f277] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStatus -->
      </class> <!-- testCases.testSliderDemoPage -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
