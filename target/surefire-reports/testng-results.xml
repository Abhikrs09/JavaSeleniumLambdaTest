<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="12" passed="10" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-02-07T13:42:51 IST" name="Suite" finished-at="2024-02-07T13:45:14 IST" duration-ms="142824">
    <groups>
    </groups>
    <test started-at="2024-02-07T13:42:51 IST" name="Test" finished-at="2024-02-07T13:45:14 IST" duration-ms="142824">
      <class name="testCases.testDatePickerPage">
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:testCases.testDatePickerPage@3e587920]" started-at="2024-02-07T13:43:58 IST" name="setUp" finished-at="2024-02-07T13:44:01 IST" duration-ms="2533" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testCases.testDatePickerPage.printCurrentdate()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="printCurrentdate()[pri:0, instance:testCases.testDatePickerPage@3e587920]" started-at="2024-02-07T13:44:01 IST" name="printCurrentdate" finished-at="2024-02-07T13:44:34 IST" duration-ms="32775" status="FAIL">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at utilities.elementsUtils.getTextFromElement(elementsUtils.java:38)
at pages.datePickerPage.printCurrentMonthYear(datePickerPage.java:58)
at testCases.testDatePickerPage.printCurrentdate(testDatePickerPage.java:25)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- printCurrentdate -->
        <test-method is-config="true" signature="testStatus(org.testng.ITestResult)[pri:0, instance:testCases.testDatePickerPage@3e587920]" started-at="2024-02-07T13:44:34 IST" name="testStatus" finished-at="2024-02-07T13:44:34 IST" duration-ms="220" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=printCurrentdate status=FAILURE method=testDatePickerPage.printCurrentdate()[pri:0, instance:testCases.testDatePickerPage@3e587920] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStatus -->
      </class> <!-- testCases.testDatePickerPage -->
      <class name="testCases.testCheckboxPage">
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:testCases.testCheckboxPage@1e11bc55]" started-at="2024-02-07T13:45:04 IST" name="setUp" finished-at="2024-02-07T13:45:06 IST" duration-ms="1929" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testCases.testCheckboxPage.DisableCheckBoxDemo()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="DisableCheckBoxDemo()[pri:0, instance:testCases.testCheckboxPage@1e11bc55]" started-at="2024-02-07T13:45:06 IST" name="DisableCheckBoxDemo" finished-at="2024-02-07T13:45:08 IST" duration-ms="1548" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DisableCheckBoxDemo -->
        <test-method is-config="true" signature="testStatus(org.testng.ITestResult)[pri:0, instance:testCases.testCheckboxPage@1e11bc55]" started-at="2024-02-07T13:45:08 IST" name="testStatus" finished-at="2024-02-07T13:45:08 IST" duration-ms="114" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=DisableCheckBoxDemo status=SUCCESS method=testCheckboxPage.DisableCheckBoxDemo()[pri:0, instance:testCases.testCheckboxPage@1e11bc55] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStatus -->
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:testCases.testCheckboxPage@1e11bc55]" started-at="2024-02-07T13:45:08 IST" name="setUp" finished-at="2024-02-07T13:45:10 IST" duration-ms="2050" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testCases.testCheckboxPage.MutlipleCheckBox()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="MutlipleCheckBox()[pri:0, instance:testCases.testCheckboxPage@1e11bc55]" started-at="2024-02-07T13:45:10 IST" name="MutlipleCheckBox" finished-at="2024-02-07T13:45:11 IST" duration-ms="897" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MutlipleCheckBox -->
        <test-method is-config="true" signature="testStatus(org.testng.ITestResult)[pri:0, instance:testCases.testCheckboxPage@1e11bc55]" started-at="2024-02-07T13:45:11 IST" name="testStatus" finished-at="2024-02-07T13:45:11 IST" duration-ms="100" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=MutlipleCheckBox status=SUCCESS method=testCheckboxPage.MutlipleCheckBox()[pri:0, instance:testCases.testCheckboxPage@1e11bc55] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStatus -->
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:testCases.testCheckboxPage@1e11bc55]" started-at="2024-02-07T13:45:11 IST" name="setUp" finished-at="2024-02-07T13:45:13 IST" duration-ms="1948" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testCases.testCheckboxPage.SingleCheckBoxDemo()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="SingleCheckBoxDemo()[pri:0, instance:testCases.testCheckboxPage@1e11bc55]" started-at="2024-02-07T13:45:13 IST" name="SingleCheckBoxDemo" finished-at="2024-02-07T13:45:13 IST" duration-ms="626" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SingleCheckBoxDemo -->
        <test-method is-config="true" signature="testStatus(org.testng.ITestResult)[pri:0, instance:testCases.testCheckboxPage@1e11bc55]" started-at="2024-02-07T13:45:13 IST" name="testStatus" finished-at="2024-02-07T13:45:14 IST" duration-ms="100" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SingleCheckBoxDemo status=SUCCESS method=testCheckboxPage.SingleCheckBoxDemo()[pri:0, instance:testCases.testCheckboxPage@1e11bc55] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStatus -->
      </class> <!-- testCases.testCheckboxPage -->
      <class name="testCases.testHandelWindowsPage">
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:testCases.testHandelWindowsPage@f8908f6]" started-at="2024-02-07T13:43:17 IST" name="setUp" finished-at="2024-02-07T13:43:22 IST" duration-ms="5473" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testCases.testHandelWindowsPage.handelTwitterPage() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="handelTwitterPage()[pri:0, instance:testCases.testHandelWindowsPage@f8908f6]" started-at="2024-02-07T13:43:22 IST" name="handelTwitterPage" finished-at="2024-02-07T13:43:58 IST" duration-ms="35506" status="FAIL">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at utilities.elementsUtils.typeTextIntoElement(elementsUtils.java:44)
at pages.twitterPage.settextUsername(twitterPage.java:42)
at testCases.testHandelWindowsPage.handelTwitterPage(testHandelWindowsPage.java:46)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- handelTwitterPage -->
        <test-method is-config="true" signature="testStatus(org.testng.ITestResult)[pri:0, instance:testCases.testHandelWindowsPage@f8908f6]" started-at="2024-02-07T13:43:58 IST" name="testStatus" finished-at="2024-02-07T13:43:58 IST" duration-ms="461" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=handelTwitterPage status=FAILURE method=testHandelWindowsPage.handelTwitterPage()[pri:0, instance:testCases.testHandelWindowsPage@f8908f6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStatus -->
      </class> <!-- testCases.testHandelWindowsPage -->
      <class name="testCases.testDropDownSearchDemoPage">
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:testCases.testDropDownSearchDemoPage@63fd4873]" started-at="2024-02-07T13:44:49 IST" name="setUp" finished-at="2024-02-07T13:44:51 IST" duration-ms="2013" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testCases.testDropDownSearchDemoPage.SelectCountry()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="SelectCountry()[pri:0, instance:testCases.testDropDownSearchDemoPage@63fd4873]" started-at="2024-02-07T13:44:51 IST" name="SelectCountry" finished-at="2024-02-07T13:44:54 IST" duration-ms="2938" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SelectCountry -->
        <test-method is-config="true" signature="testStatus(org.testng.ITestResult)[pri:0, instance:testCases.testDropDownSearchDemoPage@63fd4873]" started-at="2024-02-07T13:44:54 IST" name="testStatus" finished-at="2024-02-07T13:44:54 IST" duration-ms="162" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SelectCountry status=SUCCESS method=testDropDownSearchDemoPage.SelectCountry()[pri:0, instance:testCases.testDropDownSearchDemoPage@63fd4873] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStatus -->
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:testCases.testDropDownSearchDemoPage@63fd4873]" started-at="2024-02-07T13:44:54 IST" name="setUp" finished-at="2024-02-07T13:44:56 IST" duration-ms="1971" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testCases.testDropDownSearchDemoPage.SelectFile()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="SelectFile()[pri:0, instance:testCases.testDropDownSearchDemoPage@63fd4873]" started-at="2024-02-07T13:44:56 IST" name="SelectFile" finished-at="2024-02-07T13:44:59 IST" duration-ms="2961" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SelectFile -->
        <test-method is-config="true" signature="testStatus(org.testng.ITestResult)[pri:0, instance:testCases.testDropDownSearchDemoPage@63fd4873]" started-at="2024-02-07T13:44:59 IST" name="testStatus" finished-at="2024-02-07T13:44:59 IST" duration-ms="155" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SelectFile status=SUCCESS method=testDropDownSearchDemoPage.SelectFile()[pri:0, instance:testCases.testDropDownSearchDemoPage@63fd4873] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStatus -->
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:testCases.testDropDownSearchDemoPage@63fd4873]" started-at="2024-02-07T13:44:59 IST" name="setUp" finished-at="2024-02-07T13:45:01 IST" duration-ms="1949" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testCases.testDropDownSearchDemoPage.SelectState()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="SelectState()[pri:0, instance:testCases.testDropDownSearchDemoPage@63fd4873]" started-at="2024-02-07T13:45:01 IST" name="SelectState" finished-at="2024-02-07T13:45:04 IST" duration-ms="2792" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SelectState -->
        <test-method is-config="true" signature="testStatus(org.testng.ITestResult)[pri:0, instance:testCases.testDropDownSearchDemoPage@63fd4873]" started-at="2024-02-07T13:45:04 IST" name="testStatus" finished-at="2024-02-07T13:45:04 IST" duration-ms="152" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SelectState status=SUCCESS method=testDropDownSearchDemoPage.SelectState()[pri:0, instance:testCases.testDropDownSearchDemoPage@63fd4873] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStatus -->
      </class> <!-- testCases.testDropDownSearchDemoPage -->
      <class name="testCases.testDragAndDrop">
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:testCases.testDragAndDrop@750fe12e]" started-at="2024-02-07T13:42:51 IST" name="setUp" finished-at="2024-02-07T13:43:03 IST" duration-ms="12657" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testCases.testDragAndDrop.dragAndDropDemo1()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="dragAndDropDemo1()[pri:0, instance:testCases.testDragAndDrop@750fe12e]" started-at="2024-02-07T13:43:04 IST" name="dragAndDropDemo1" finished-at="2024-02-07T13:43:07 IST" duration-ms="3794" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dragAndDropDemo1 -->
        <test-method is-config="true" signature="testStatus(org.testng.ITestResult)[pri:0, instance:testCases.testDragAndDrop@750fe12e]" started-at="2024-02-07T13:43:07 IST" name="testStatus" finished-at="2024-02-07T13:43:08 IST" duration-ms="518" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=dragAndDropDemo1 status=SUCCESS method=testDragAndDrop.dragAndDropDemo1()[pri:0, instance:testCases.testDragAndDrop@750fe12e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStatus -->
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:testCases.testDragAndDrop@750fe12e]" started-at="2024-02-07T13:43:08 IST" name="setUp" finished-at="2024-02-07T13:43:13 IST" duration-ms="4998" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testCases.testDragAndDrop.dragAndDropDemo2()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="dragAndDropDemo2()[pri:0, instance:testCases.testDragAndDrop@750fe12e]" started-at="2024-02-07T13:43:13 IST" name="dragAndDropDemo2" finished-at="2024-02-07T13:43:17 IST" duration-ms="3856" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dragAndDropDemo2 -->
        <test-method is-config="true" signature="testStatus(org.testng.ITestResult)[pri:0, instance:testCases.testDragAndDrop@750fe12e]" started-at="2024-02-07T13:43:17 IST" name="testStatus" finished-at="2024-02-07T13:43:17 IST" duration-ms="173" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=dragAndDropDemo2 status=SUCCESS method=testDragAndDrop.dragAndDropDemo2()[pri:0, instance:testCases.testDragAndDrop@750fe12e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStatus -->
      </class> <!-- testCases.testDragAndDrop -->
      <class name="testCases.testSliderDemoPage">
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:testCases.testSliderDemoPage@24f43aa3]" started-at="2024-02-07T13:44:42 IST" name="setUp" finished-at="2024-02-07T13:44:46 IST" duration-ms="3390" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testCases.testSliderDemoPage.testSlider()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testSlider()[pri:0, instance:testCases.testSliderDemoPage@24f43aa3]" started-at="2024-02-07T13:44:46 IST" name="testSlider" finished-at="2024-02-07T13:44:49 IST" duration-ms="3165" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSlider -->
        <test-method is-config="true" signature="testStatus(org.testng.ITestResult)[pri:0, instance:testCases.testSliderDemoPage@24f43aa3]" started-at="2024-02-07T13:44:49 IST" name="testStatus" finished-at="2024-02-07T13:44:49 IST" duration-ms="175" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testSlider status=SUCCESS method=testSliderDemoPage.testSlider()[pri:0, instance:testCases.testSliderDemoPage@24f43aa3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStatus -->
      </class> <!-- testCases.testSliderDemoPage -->
      <class name="testCases.testDynamicDataLoading">
        <test-method is-config="true" signature="setUp(java.lang.reflect.Method)[pri:0, instance:testCases.testDynamicDataLoading@2ef8a8c3]" started-at="2024-02-07T13:44:34 IST" name="setUp" finished-at="2024-02-07T13:44:36 IST" duration-ms="1751" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testCases.testDynamicDataLoading.DataIsLoaded()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="DataIsLoaded()[pri:0, instance:testCases.testDynamicDataLoading@2ef8a8c3]" started-at="2024-02-07T13:44:36 IST" name="DataIsLoaded" finished-at="2024-02-07T13:44:42 IST" duration-ms="6485" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DataIsLoaded -->
        <test-method is-config="true" signature="testStatus(org.testng.ITestResult)[pri:0, instance:testCases.testDynamicDataLoading@2ef8a8c3]" started-at="2024-02-07T13:44:42 IST" name="testStatus" finished-at="2024-02-07T13:44:42 IST" duration-ms="179" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=DataIsLoaded status=SUCCESS method=testDynamicDataLoading.DataIsLoaded()[pri:0, instance:testCases.testDynamicDataLoading@2ef8a8c3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStatus -->
      </class> <!-- testCases.testDynamicDataLoading -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
